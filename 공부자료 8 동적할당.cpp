#include <iostream>

// 변수
// 지역(스택)
// 전역, 정적, 외부(데이터)



// 메모리 영역
// 스택
// 데이터
// ROM
// 힙 영역(동적할당) : 런임타임 중에 대응 가능한 메모리 영역( 실행되야 필요할지 필요없일지 알게됨)

int main()
{
	int* pInt = (int*)malloc(100); //memory unlocate 함수 : 내가 지정한 사이즈 만큼 힙 영역에 만듬. (단위 byte)
	// 힙 메모리에 100바이트만큼 공간을 할당해 그 주소를 포인터에 저장한 것임. 
	// 강제 캐스팅을 한 이유 : malloc이라는 함수는 void 포인터기 때문에

	// 힙 메모리에 4바이트 크기의 실수를 저장할 수 있는 공간 만들기
	float*pF = (float*)malloc(4); // 실수형식으로 데이터가 저장됨. 

	int* pI = (int*)pF;
	int i = *pI; // 이상한 값이 나옴. 실수형식을 정수형으로 읽기 때문에
	*pF = 1.23f; // 역참조 가능.

	// 동적할당
	// 1. 런타임 중에 대응 가능: 런타임중에 공간이 만들어짐.
	// 2. 사용자가 직접 메모리를 관리해야함(해제) = 직접 해제해줘야함.

	if (nullptr != pInt)
	{
		free(pInt); //동적할당 해제.
	}
	if (nullptr != pF)
	{
		free(pF);
	}

	
	return 0;
}