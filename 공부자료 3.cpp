#include <iostream>

// 변수의 종류
// 1. 지역변수
// 2. 전역변수
// 3. 정적변수
// 4. 외부 변수

// 메모리 영역
// 1. 스택 영역
// 2. 데이터 영역
// 3. 읽기 전용(코드, ROM)
// 4. 힙 영역

// Data 영역 특징
// 프로그램이 시작 될때 main 함수가 호출되면서 생기는 영역
// 프로그램 종료 시 해제


// 전역변수
int g_1 = 0; // 이런 변수가 사용하는 메모리 영역 Data 영역
// 단점. 분할구현시 링크과정중 오류가 남.  



// 정적변수 
static int iStatic = 0; // 예도 Data영역 사용. 
// but 분할구현시 다른 함수에 사용 가능. 
// 정적변수는 각자 자신이 생성된 cpp 파일에서 벗어나지 못함. 따라서 전역변수에서 생기는 문제점이 생기지 않음. 
// 즉 다른 파일에 똑같은 이름의 변수가 있더라도 상관없음. 그 파일에서만 사용되기 때문에. ex) main파일에서 iStatic은 main파일거, func파일에서 iStatic은 func파일거. 

//만약 모든 파일에서  서로 같은 이름이지만 사용가능한 전역변수를 만들고 싶을때
//모든 파일에서 접근 가능한 헤더파일을 만들고 거기에 정적변수를 만들고 모든 파일에서 참조시키면 사용가능.
// 예시 main.cpp 와 func.cpp, common.h
//하지만 이것도 모든 파일에서 접근 가능한 전역변수를 만들 수 없음


//만약 모든 파일에서 접근 가능한 전역변수를 만드려면 >> 외부변수를 만들어야 함. 
// 외부변수 : 
// 사용방법 : 초기화 하지 않고 헤더파일에 정의 ex) common.h
//            그 뒤 commo.h가 참조되어있는 아무 cpp 파일에 초기화시켜 정의해두면 사용가능. 


int Test() //이런식으로 함수에 사용할 수 있음. 
{
	static int i = 0; //이것도 정적변수인데 함수안에 정의됐기 때문에 함수안에서 나갈 수 없음. 
	//정적변수가 함수안어서 쓸때에는 위에 식이 i를 실행될때마다 계속 초기화 하는게 아니라 처음 초기값만 0으로 설정한다는 의미. 
	++g_1;
	++i;
	return i;
}


int main()
{
	Test();
	Test();
	Test();
	Test();
	Test();
	Test();
	int icall = Test();
	std::cout << g_1 << " " <<  icall << std::endl;
	g_1 = 0;
	
	return 0;
}